{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-418547411e29bb846dafa32162ccd51d341ab280592071f21f07b48040e2c78a1b27954f192016e31ec58e43895b59b2f06a2387e1098d4fa9cdb0fc348d2499",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({\n    firstname: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "title",
                    "defaultValue": "'MicroManager'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { OutlinedTextFieldComponent } from './shared/components/outlined-text-field/outlined-text-field.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, OutlinedTextFieldComponent, ReactiveFormsModule],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppComponent {\n  title = 'MicroManager';\n\n  fb: FormBuilder = inject(FormBuilder);\n  form: FormGroup = this.fb.group({\n    firstname: ['', Validators.required],\n  })\n\n  constructor() {\n    this.form.valueChanges.subscribe((value) => console.log(value));\n    this.form.controls['firstname'].disable();\n\n    setTimeout(() => this.form.controls['firstname'].enable(), 5000)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "templateData": "<router-outlet></router-outlet>\n<div [formGroup]=\"form\">\n  <outlined-text-field placeholder=\"label\" error=\"\" formControlName=\"firstname\"/>\n</div>\n"
        },
        {
            "name": "BaseTextFieldComponent",
            "id": "component-BaseTextFieldComponent-9c86a608d7cf3633070c3b6ab3dcd3b4f2d5237eb8fe64a4a627fd179e3137104e85309f3a76ba3392dac6b0e75eca25738619dfe5e37f30e5d2a1c9822409cb",
            "file": "src/app/shared/components/base/base-text-field/base-text-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "generic-text-input",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classList",
                    "defaultValue": "computed(\r\n      () => `${this.state()} ${this.populated() ? 'populated' : 'unpopulated'}`\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "initialvalue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "populated",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "state",
                    "defaultValue": "signal('unfocused')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<TextFieldState>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "markAsTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDisable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEnable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, ViewChild, signal, effect, computed, WritableSignal, Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\nexport type TextFieldState =\r\n  | 'unfocused'\r\n  | 'hovered'\r\n  | 'focused'\r\n  | 'error'\r\n  | 'disabled';\r\n\r\n  @Component({\r\n    selector: 'generic-text-input',\r\n    template: '',\r\n  })\r\n  export class BaseTextFieldComponent implements ControlValueAccessor {\r\n    @Input() placeholder: string = '';\r\n    @Input() error?: string;\r\n    @ViewChild('input') input?: ElementRef<HTMLInputElement>;\r\n\r\n    // signals\r\n    state: WritableSignal<TextFieldState> = signal('unfocused');\r\n    populated = signal(false);\r\n    classList = computed(\r\n      () => `${this.state()} ${this.populated() ? 'populated' : 'unpopulated'}`\r\n    );\r\n\r\n    // value accessor\r\n    onChange = (value: any) => {};\r\n    onTouched = () => {};\r\n    touched = false;\r\n    initialvalue?: string;\r\n\r\n    ngAfterViewInit() {\r\n      const el: HTMLInputElement | undefined = this.input?.nativeElement;\r\n      el?.addEventListener('input', () => {\r\n        this.onChange(el.value);\r\n        this.populated.set(el.value.length > 0 || this.placeholder.length > 0);\r\n      });\r\n\r\n      if (el && this.initialvalue) el.value = this.initialvalue;\r\n    }\r\n\r\n    ngOnChanges() {\r\n      if (this.error) this.state.set('error');\r\n      console.log(this.error);\r\n      if (this.placeholder.length > 0) this.populated.set(true);\r\n    }\r\n\r\n    //#region Value Accessor\r\n    writeValue(obj: any): void {\r\n      const el = this.input?.nativeElement;\r\n      if (el) {\r\n        el.value = obj;\r\n      } else {\r\n        this.initialvalue = obj;\r\n      }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n      this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n      this.onTouched = fn;\r\n    }\r\n\r\n    markAsTouched() {\r\n      if (!this.touched) {\r\n        this.touched = true;\r\n        this.onTouched();\r\n      }\r\n    }\r\n\r\n    setDisabledState(disabled: boolean) {\r\n      if(disabled) {\r\n        this.onDisable();\r\n      } else {\r\n        this.onEnable();\r\n      }\r\n    }\r\n    //#endregion\r\n\r\n    //#region State Reducers\r\n    onFocus() {\r\n      this.state.update((state) => {\r\n        if (state === 'unfocused' || state === 'hovered') {\r\n          return 'focused';\r\n        }\r\n        return state;\r\n      });\r\n    }\r\n\r\n    onBlur() {\r\n      this.state.update((state) => {\r\n        if (state === 'focused') {\r\n          return 'unfocused';\r\n        }\r\n        return state;\r\n      });\r\n    }\r\n\r\n    onMouseOver() {\r\n      this.state.update((state) => {\r\n        if (state === 'unfocused') {\r\n          return 'hovered';\r\n        }\r\n        return state;\r\n      });\r\n    }\r\n\r\n    onMouseOut() {\r\n      this.state.update((state) => (state === 'hovered' ? 'unfocused' : state));\r\n    }\r\n\r\n    onDisable() {\r\n      this.state.set('disabled');\r\n    }\r\n\r\n    onEnable() {\r\n      this.state.update(state => {\r\n        if(state === 'disabled') {\r\n          return this.error ? 'error' : 'unfocused';\r\n        } else {\r\n          return state;\r\n        }\r\n      });\r\n    }\r\n    //#endregion\r\n  }\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "BodyTextComponent",
            "id": "component-BodyTextComponent-4f83fba14c4d3a47d754a02ba01e76a2f307b66b7fa25702f11a1039bffa018e222d142fa38839106c6fc172d6b9f610e5aa81aa20acca5dc06e170d9739ef24",
            "file": "src/app/shared/components/base/body-text/body-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "body-text",
            "styleUrls": [
                "./body-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./body-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "BodyTextSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "textElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLParagraphElement>",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'text'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport type BodyTextSize = 'sm' | 'md' | 'lg';\r\n\r\n@Component({\r\n  selector: 'body-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './body-text.component.html',\r\n  styleUrls: ['./body-text.component.scss'],\r\n})\r\nexport class BodyTextComponent {\r\n  @Input() size: BodyTextSize = 'md';\r\n  @ViewChild('text') textElement?: ElementRef<HTMLParagraphElement>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "p {\r\n  font-family: var(--md-sys-typescale-body-small-font-family-name);\r\n}\r\n\r\n.sm {\r\n  font-family: var(--md-sys-typescale-body-small-font-family-name);\r\n  font-style: var(--md-sys-typescale-body-small-font-family-style);\r\n  font-weight: var(--md-sys-typescale-body-small-font-weight);\r\n  font-size: var(--md-sys-typescale-body-small-font-size);\r\n  line-height: var(--md-sys-typescale-body-small-line-height);\r\n  letter-spacing: var(--md-sys-typescale-body-small-letter-spacing);\r\n}\r\n\r\n.md {\r\n  font-family: var(--md-sys-typescale-body-medium-font-family-name);\r\n  font-style: var(--md-sys-typescale-body-medium-font-family-style);\r\n  font-weight: var(--md-sys-typescale-body-medium-font-weight);\r\n  font-size: var(--md-sys-typescale-body-medium-font-size);\r\n  line-height: var(--md-sys-typescale-body-medium-line-height);\r\n  letter-spacing: var(--md-sys-typescale-body-medium-letter-spacing);\r\n}\r\n\r\n.lg {\r\n  font-family: var(--md-sys-typescale-body-large-font-family-name);\r\n  font-style: var(--md-sys-typescale-body-large-font-family-style);\r\n  font-weight: var(--md-sys-typescale-body-large-font-weight);\r\n  font-size: var(--md-sys-typescale-body-large-font-size);\r\n  line-height: var(--md-sys-typescale-body-large-line-height);\r\n  letter-spacing: var(--md-sys-typescale-body-large-letter-spacing);\r\n}\r\n",
                    "styleUrl": "./body-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"size\" #text><ng-content></ng-content></p>\r\n"
        },
        {
            "name": "DisplayTextComponent",
            "id": "component-DisplayTextComponent-adb1b8fa5db260a74577a6351a1e8a4c071b98eb59fb65ee015453675fd088b260b6c6b8098194fcbd65415c61cbc499f22656c67ee90a036f658b3a02adfc0d",
            "file": "src/app/shared/components/base/display-text/display-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "display-text",
            "styleUrls": [
                "./display-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./display-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "DisplayTextSizes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport type DisplayTextSizes = 'sm' | 'md' | 'lg';\r\n\r\n@Component({\r\n  selector: 'display-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './display-text.component.html',\r\n  styleUrls: ['./display-text.component.scss'],\r\n})\r\nexport class DisplayTextComponent {\r\n  @Input() size: DisplayTextSizes = 'md';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  height: fit-content;\r\n}\r\n\r\np {\r\n  font-family: var(--md-sys-typescale-display-large-font-family-name);\r\n  font-style: var(--md-sys-typescale-display-large-font-family-style);\r\n  font-weight: var(--md-sys-typescale-display-large-font-weight);\r\n}\r\n\r\n.sm {\r\n  font-size: var(--md-sys-typescale-display-small-font-size);\r\n  line-height: var(--md-sys-typescale-display-small-line-height);\r\n  letter-spacing: var(--md-sys-typescale-display-small-letter-spacing);\r\n}\r\n\r\n.md {\r\n  font-size: var(--md-sys-typescale-display-medium-font-size);\r\n  line-height: var(--md-sys-typescale-display-medium-line-height);\r\n  letter-spacing: var(--md-sys-typescale-display-medium-letter-spacing);\r\n}\r\n\r\n.lg {\r\n  font-size: var(--md-sys-typescale-display-large-font-size);\r\n  line-height: var(--md-sys-typescale-display-large-line-height);\r\n  letter-spacing: var(--md-sys-typescale-display-large-letter-spacing);\r\n}\r\n",
                    "styleUrl": "./display-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"size\"><ng-content></ng-content></p>"
        },
        {
            "name": "HeadlineTextComponent",
            "id": "component-HeadlineTextComponent-adaf3fcda8c9b5315fc560c2d4acf9a291757da8dcc8695b92e819eee7682717d0ffb52e1669be026b2e2956e1b67783cca1a8cbf61af81e15d582b72dd05dcf",
            "file": "src/app/shared/components/base/headline-text/headline-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "headline-text",
            "styleUrls": [
                "./headline-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./headline-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'headline-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './headline-text.component.html',\r\n  styleUrls: ['./headline-text.component.scss'],\r\n})\r\nexport class HeadlineTextComponent {\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\np {\r\n  font-family: var(--md-sys-typescale-headline-large-font-family-name);\r\n}\r\n\r\n.sm {\r\n  font-style: var(--md-sys-typescale-headline-small-font-family-style);\r\n  font-weight: var(--md-sys-typescale-headline-small-font-weight);\r\n  font-size: var(--md-sys-typescale-headline-small-font-size);\r\n  line-height: var(--md-sys-typescale-headline-small-line-height);\r\n  letter-spacing: var(--md-sys-typescale-headline-small-letter-spacing);\r\n}\r\n\r\n.md {\r\n  font-style: var(--md-sys-typescale-headline-medium-font-family-style);\r\n  font-weight: var(--md-sys-typescale-headline-medium-font-weight);\r\n  font-size: var(--md-sys-typescale-headline-medium-font-size);\r\n  line-height: var(--md-sys-typescale-headline-medium-line-height);\r\n  letter-spacing: var(--md-sys-typescale-headline-medium-letter-spacing);\r\n}\r\n\r\n.lg {\r\n  font-style: var(--md-sys-typescale-headline-large-font-family-style);\r\n  font-weight: var(--md-sys-typescale-headline-large-font-weight);\r\n  font-size: var(--md-sys-typescale-headline-large-font-size);\r\n  line-height: var(--md-sys-typescale-headline-large-line-height);\r\n  letter-spacing: var(--md-sys-typescale-headline-large-letter-spacing);\r\n}\r\n",
                    "styleUrl": "./headline-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"this.size\"><ng-content></ng-content></p>\r\n"
        },
        {
            "name": "LabelTextComponent",
            "id": "component-LabelTextComponent-bdb7912257476124004c8884617d6984c602c7bf8409a4c616a24e219e2f6350966302713a6446a0f19ecd4a8088345556332d9fb5fd57bf003de71b8a504e82",
            "file": "src/app/shared/components/base/label-text/label-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-text",
            "styleUrls": [
                "./label-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./label-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'label-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './label-text.component.html',\r\n  styleUrls: ['./label-text.component.scss'],\r\n})\r\nexport class LabelTextComponent {\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\np {\r\n  font-family: var(--md-sys-typescale-label-large-font-family-name);\r\n  font-style: var(--md-sys-typescale-label-large-font-family-style);\r\n  font-weight: var(--md-sys-typescale-label-large-font-weight);\r\n}\r\n\r\n.sm {\r\n  font-size: var(--md-sys-typescale-label-small-font-size);\r\n  line-height: var(--md-sys-typescale-label-small-line-height);\r\n  letter-spacing: var(--md-sys-typescale-label-small-letter-spacing);\r\n}\r\n\r\n.md {\r\n  font-size: var(--md-sys-typescale-label-medium-font-size);\r\n  line-height: var(--md-sys-typescale-label-medium-line-height);\r\n  letter-spacing: var(--md-sys-typescale-label-medium-letter-spacing);\r\n}\r\n\r\n.lg {\r\n  font-size: var(--md-sys-typescale-label-large-font-size);\r\n  line-height: var(--md-sys-typescale-label-large-line-height);\r\n  letter-spacing: var(--md-sys-typescale-label-large-letter-spacing);\r\n}\r\n",
                    "styleUrl": "./label-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"this.size\"><ng-content></ng-content></p>\r\n"
        },
        {
            "name": "OutlinedTextFieldComponent",
            "id": "component-OutlinedTextFieldComponent-4f5a2315b1c75d612b9c6c280147bbf1d271ceb5660d3f9cef8ea65825f77163c8fecacdd631124f35e1bb13cc2b3629093d7bce2fa098c9eb12ff78da29f1c3",
            "file": "src/app/shared/components/outlined-text-field/outlined-text-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: OutlinedTextFieldComponent\n}",
                    "type": "component"
                }
            ],
            "selector": "outlined-text-field",
            "styleUrls": [
                "./outlined-text-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./outlined-text-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classList",
                    "defaultValue": "computed(\r\n      () => `${this.state()} ${this.populated() ? 'populated' : 'unpopulated'}`\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "initialvalue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "populated",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "state",
                    "defaultValue": "signal('unfocused')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<TextFieldState>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "markAsTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onDisable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onEnable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onMouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "onMouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseTextFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, WritableSignal, signal, effect, computed } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { BaseTextFieldComponent } from '../base/base-text-field/base-text-field.component';\n\n\n\n@Component({\n  selector: 'outlined-text-field',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './outlined-text-field.component.html',\n  styleUrls: ['./outlined-text-field.component.scss'],\n   providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi:true,\n      useExisting: OutlinedTextFieldComponent\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class OutlinedTextFieldComponent extends BaseTextFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./outlined-text-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "BaseTextFieldComponent",
            "templateData": "<div>\n  <input\n    #input\n    [placeholder]=\"placeholder\"\n    [disabled]=\"state() === 'disabled'\"\n    (focus)=\"onFocus()\"\n    (blur)=\"onBlur()\"\n    (mouseover)=\"onMouseOver()\"\n    (mouseout)=\"onMouseOut()\"\n    [classList]=\"classList()\"\n  />\n  <p>{{classList()}}</p>\n</div>\n"
        },
        {
            "name": "TitleTextComponent",
            "id": "component-TitleTextComponent-f612aaf8fc8c8a09c4188debc128dc1f5d578e0f5a758c5c7a8218d6406be3dbe45ea5440fedef9c9099c0a7df02d699c20d854d7d8e130c9ef92f348d83c577",
            "file": "src/app/shared/components/base/title-text/title-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "title-text",
            "styleUrls": [
                "./title-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'title-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './title-text.component.html',\r\n  styleUrls: ['./title-text.component.scss'],\r\n})\r\nexport class TitleTextComponent {\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\np {\r\n  font-family: var(--md-sys-typescale-title-large-font-family-name);\r\n}\r\n\r\n.sm {\r\n  font-style: var(--md-sys-typescale-title-small-font-family-style);\r\n  font-weight: var(--md-sys-typescale-title-small-font-weight);\r\n  font-size: var(--md-sys-typescale-title-small-font-size);\r\n  line-height: var(--md-sys-typescale-title-small-line-height);\r\n  letter-spacing: var(--md-sys-typescale-title-small-letter-spacing);\r\n}\r\n\r\n.md {\r\n  font-style: var(--md-sys-typescale-title-medium-font-family-style);\r\n  font-weight: var(--md-sys-typescale-title-medium-font-weight);\r\n  font-size: var(--md-sys-typescale-title-medium-font-size);\r\n  line-height: var(--md-sys-typescale-title-medium-line-height);\r\n  letter-spacing: var(--md-sys-typescale-title-medium-letter-spacing);\r\n}\r\n\r\n.lg {\r\n  font-style: var(--md-sys-typescale-title-large-font-family-style);\r\n  font-weight: var(--md-sys-typescale-title-large-font-weight);\r\n  font-size: var(--md-sys-typescale-title-large-font-size);\r\n  line-height: var(--md-sys-typescale-title-large-line-height);\r\n  letter-spacing: var(--md-sys-typescale-title-large-letter-spacing);\r\n}\r\n",
                    "styleUrl": "./title-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"this.size\"><ng-content></ng-content></p>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideRouter(routes)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<OutlinedTextFieldComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Outlined Text Field',\r\n  component: OutlinedTextFieldComponent,\r\n  tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DisplayTextComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Display Text',\r\n  component: DisplayTextComponent,\r\n  tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BodyTextComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Body Text',\r\n  component: BodyTextComponent,\r\n  tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeadlineTextComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Headline Text',\r\n  component: HeadlineTextComponent,\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TitleTextComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Title Text',\r\n  component: TitleTextComponent,\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LabelTextComponent>",
                "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Label Text',\r\n  component: LabelTextComponent,\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    placeholder: 'Placeholder',\r\n    error: \"Error\"\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<outlined-text-field> [disabled]=\"disabled\"</outlined-text-field>',\r\n\r\n  }),\r\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<display-text [size]=\"size\">Test</display-text>',\r\n  }),\r\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md'\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<body-text [size]=\"size\">Test</body-text>'\r\n  })\r\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<headline-text [size]=\"size\">Test</headline-text>',\r\n  }),\r\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<title-text [size]=\"size\">Test</title-text>',\r\n  }),\r\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<label-text [size]=\"size\">Test</label-text>',\r\n  }),\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "BodyTextSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "src/app/shared/components/base/body-text/body-text.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "DisplayTextSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "src/app/shared/components/base/display-text/display-text.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<OutlinedTextFieldComponent>",
                "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DisplayTextComponent>",
                "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BodyTextComponent>",
                "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeadlineTextComponent>",
                "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TitleTextComponent>",
                "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LabelTextComponent>",
                "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "TextFieldState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"unfocused\" | \"hovered\" | \"focused\" | \"error\" | \"disabled\"",
                "file": "src/app/shared/components/base/base-text-field/base-text-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideRouter(routes)],\n}"
                }
            ],
            "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<OutlinedTextFieldComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Outlined Text Field',\r\n  component: OutlinedTextFieldComponent,\r\n  tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    placeholder: 'Placeholder',\r\n    error: \"Error\"\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<outlined-text-field> [disabled]=\"disabled\"</outlined-text-field>',\r\n\r\n  }),\r\n}"
                }
            ],
            "src/app/shared/components/base/display-text/display-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DisplayTextComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Display Text',\r\n  component: DisplayTextComponent,\r\n  tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<display-text [size]=\"size\">Test</display-text>',\r\n  }),\r\n}"
                }
            ],
            "src/app/shared/components/base/body-text/body-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BodyTextComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Body Text',\r\n  component: BodyTextComponent,\r\n  tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md'\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<body-text [size]=\"size\">Test</body-text>'\r\n  })\r\n}"
                }
            ],
            "src/app/shared/components/base/headline-text/headline-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeadlineTextComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Headline Text',\r\n  component: HeadlineTextComponent,\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<headline-text [size]=\"size\">Test</headline-text>',\r\n  }),\r\n}"
                }
            ],
            "src/app/shared/components/base/title-text/title-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TitleTextComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Title Text',\r\n  component: TitleTextComponent,\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<title-text [size]=\"size\">Test</title-text>',\r\n  }),\r\n}"
                }
            ],
            "src/app/shared/components/base/label-text/label-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LabelTextComponent>",
                    "defaultValue": "{\r\n  /* 👇 The title prop is optional.\r\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\r\n   * to learn how to generate automatic titles\r\n   */\r\n  title: 'Label Text',\r\n  component: LabelTextComponent,\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    //👇 The args you need here will depend on your component\r\n    size: 'md',\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: '<label-text [size]=\"size\">Test</label-text>',\r\n  }),\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/components/base/body-text/body-text.component.ts": [
                {
                    "name": "BodyTextSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "src/app/shared/components/base/body-text/body-text.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/components/base/display-text/display-text.component.ts": [
                {
                    "name": "DisplayTextSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "src/app/shared/components/base/display-text/display-text.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<OutlinedTextFieldComponent>",
                    "file": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/display-text/display-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DisplayTextComponent>",
                    "file": "src/app/shared/components/base/display-text/display-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/body-text/body-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BodyTextComponent>",
                    "file": "src/app/shared/components/base/body-text/body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/headline-text/headline-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeadlineTextComponent>",
                    "file": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/title-text/title-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TitleTextComponent>",
                    "file": "src/app/shared/components/base/title-text/title-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/label-text/label-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LabelTextComponent>",
                    "file": "src/app/shared/components/base/label-text/label-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/components/base/base-text-field/base-text-field.component.ts": [
                {
                    "name": "TextFieldState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"unfocused\" | \"hovered\" | \"focused\" | \"error\" | \"disabled\"",
                    "file": "src/app/shared/components/base/base-text-field/base-text-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/base-text-field/base-text-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseTextFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/body-text/body-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/body-text/body-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/body-text/body-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/display-text/display-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DisplayTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/display-text/display-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/display-text/display-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/headline-text/headline-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeadlineTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/headline-text/headline-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/label-text/label-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/label-text/label-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/label-text/label-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/title-text/title-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/title-text/title-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/base/title-text/title-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/outlined-text-field/outlined-text-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutlinedTextFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/outlined-text-field/outlined-text-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}